# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "feat/OAuth" ]
  pull_request:
    branches: [ "feat/OAuth" ]


permissions:
  contents: read

env:
  S3_BUCKET_NAME: wanderhub.backend
  RESOURCE_PATH: ./src/main/resources/application-prod.yml

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'

      - name: Set prod yml
        uses: microsoft/variable-substitution@v1
        with:
          files: ${{ env.RESOURCE_PATH }}
        env:
          spring.security.oauth2.client.registration.google.clientId: ${{secrets.G_CLIENT_ID}}
          spring.security.oauth2.client.registration.google.clientSecret: ${{secrets.G_CLIENT_SECRET}}
          spring.security.oauth2.client.registration.kakao.clientId: ${{secrets.K_CLIENT_ID}}
          spring.security.oauth2.client.registration.kakao.client-secret: ${{secrets.K_CLIENT_SECRET}}
          spring.datasource.url: jdbc:mysql://${{secrets.MYSQL_HOST}}:${{secrets.MYSQL_PORT}}/${{secrets.DATA_BASE_NAME}}?useSSL=false
          spring.datasource.username: ${{secrets.MYSQL_USER_NAME}}
          spring.datasource.password: ${{secrets.MYSQL_PASSWORD}}
          jwt.key.secret: ${{secrets.JWT_SECRET_KEY}}
          admin.email: ${{secrets.ADMIN_EMAILS}}

      - name: init with Gradle
        uses: gradle/gradle-build-action@v2
      - run: gradle init
      - name: Build with Gradle
        uses: gradle/gradle-build-action@67421db6bd0bf253fb4bd25b31ebb98943c375e1
        with:
          gradle-version: 7.6.1 # gradle 버전
          arguments: build      # build

      # build한 후 프로젝트를 압축합니다.
      - name: Make zip file
        run: zip -r ./wanderHub-backend-deploy.zip .
        shell: bash

      # Access Key와 Secret Access Key를 통해 권한을 확인합니다.
      # 아래 코드에 Access Key와 Secret Key를 직접 작성하지 않습니다.
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }} # 등록한 Github Secret이 자동으로 불려옵니다.
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }} # 등록한 Github Secret이 자동으로 불려옵니다.
          aws-region: ap-northeast-2  # 서울 리전

      # 압축한 프로젝트를 S3로 전송합니다.
      - name: Upload to S3
        run: aws s3 cp --region ap-northeast-2 ./wanderHub-backend-deploy.zip s3://$S3_BUCKET_NAME/wanderHub-backend-deploy.zip

      # CodeDeploy에게 배포 명령을 내립니다.
      - name: Code Deploy
        run: >
          aws deploy create-deployment --application-name WanderHub-Backend
          --deployment-config-name CodeDeployDefault.AllAtOnce
          --deployment-group-name WanderHub-Backend-G
          --s3-location bucket=$S3_BUCKET_NAME,bundleType=zip,key=wanderHub-backend-deploy.zip
