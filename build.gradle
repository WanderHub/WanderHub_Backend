plugins {
    id 'java'
    id 'org.springframework.boot' version '2.7.12'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
    id 'org.asciidoctor.jvm.convert' version '3.3.2'
}

group = 'wanderhub'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    asciidoctorExtensions //dependencies에서 적용한 것 추가 (의존성 설정 명시)
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    set('snippetsDir', file("build/generated-snippets"))
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
//    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'com.mysql:mysql-connector-j'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
    testImplementation 'org.springframework.security:spring-security-test'
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    //ModelMapper
    implementation group: 'org.modelmapper', name: 'modelmapper', version: '2.3.8'

    //mapStruct
    implementation 'org.mapstruct:mapstruct:1.4.2.Final'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.4.2.Final'
    annotationProcessor 'org.projectlombok:lombok-mapstruct-binding:0.2.0'

    //rest docs
    //.adoc 파일을 html로 만들어 export 해줌
    asciidoctorExtensions 'org.springframework.restdocs:spring-restdocs-asciidoctor'
}

tasks.named('test') {
    outputs.dir snippetsDir
    useJUnitPlatform()
}

tasks.named('asciidoctor') {
    configurations 'asciidoctorExtensions' //위에서 작성한 configuration 적용
    inputs.dir snippetsDir
    dependsOn test //test 작업 이후에 작동하도록 설정
}

//test {
//    outputs.dir snippetsDir
//    useJUnitPlatform()
//}
//asciidoctor {
//    inputs.dir snippetsDir
//    configurations 'asciidoctorExtensions' //위에서 작성한 configuration 적용
//    dependsOn test //gradle build 시 test->asciidoctor 순으로 수행
//}

//소스코드에 html 파일 복사
task copyDocument(type: Copy) {
    dependsOn asciidoctor
    doFirst {
        delete file('src/main/resources/static/docs')
    }
    from file("build/docs/asciidoc")
    into file("src/main/resources/static/docs")
}

build { //build의 의존작업 명시
    dependsOn copyDocument
}

bootJar {
    dependsOn asciidoctor
    from ("${asciidoctor.outputDir}") { //gradle build 시, /build/asciidoc에 html 파일생성
        into 'static/docs' //html 파일이 jar 안의 /static/docs/ 폴더로 복사됨
    }
}


